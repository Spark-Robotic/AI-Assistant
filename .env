# AI Implementation Assistant Environment Configuration
# Make a copy of this file named '.env' and fill in your specific credentials

# Flask Configuration
FLASK_SECRET_KEY=your-random-secret-key-here  # Generate with: python -c "import secrets; print(secrets.token_hex(16))"
PORT=5000  # Default port for the web application
NGROK_AUTH_TOKEN=your-ngrok-auth-token  # Get from: https://dashboard.ngrok.com/auth

# Security (Auto-generated on first run, but you can pre-define it)
# ENCRYPTION_KEY will be automatically generated if not provided
# ENCRYPTION_KEY=your-encryption-key  

#########################
# Slack API Credentials #
#########################
# How to obtain:
# 1. Create a Slack app at: https://api.slack.com/apps
# 2. Add Bot Token Scopes: app_mentions:read, chat:write, commands
# 3. Install the app to your workspace
SLACK_BOT_TOKEN=xoxb-your-slack-bot-token  # Starts with "xoxb-"
SLACK_APP_TOKEN=xapp-your-slack-app-token  # Starts with "xapp-" (needed for Socket Mode)

######################
# Asana Credentials #
######################
# How to obtain:
# 1. Create a Personal Access Token at: https://app.asana.com/0/developer-console
# 2. Create a project in Asana and copy its ID from the URL (https://app.asana.com/0/PROJECT_ID/list)
ASANA_TOKEN=your-asana-personal-access-token
ASANA_PROJECT_ID=your-asana-project-id  # Numeric ID for your implementation project

#################
# OpenAI API    #
#################
# How to obtain:
# 1. Create an account at: https://platform.openai.com/
# 2. Generate an API key at: https://platform.openai.com/api-keys
OPENAI_API_KEY=your-openai-api-key  # Starts with "sk-"

#######################
# Optional Settings   #
#######################
# Custom name for your assistant
# ASSISTANT_NAME=Your Custom Assistant Name

# SECURITY NOTE: This file contains sensitive credentials.
# - Do not commit this file to version control
# - Restrict file permissions (chmod 600 .env)
# - Regularly rotate your API keys for better security